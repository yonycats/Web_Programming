/*     
	JS의 생산성을 향상 시키는 라이브러리(=자주쓰는 코드를 재사용 가능 형태로 가공하여 효율을 높이는 코드)
	무료 오픈소스 소프트웨어
	자바스크립트에 비해 좀 더 직관적이고 짧고 단순한 형태로 구성
		
	()	: 함수 호출 연산자
	.	: 객체 속성(property) 접근 연산자
	$()	: jQuery 함수를 호출하여 jQuery객체를 반환
	$.	: jQuery 객체의 속성(property) 호출
	
	
	$(fn) : DOM 로드 완료시 실행할 함수 바인딩 (= $(document).ready(function))
	

동향
	한때 front-end의 jQuery의존도는 상당했으나, 현재는 하락세가 뚜렷하게 나타남
	
	유명 오픈소스 프레임워크 부트스트랩도 버전5(2020)부터 의존성 제거

	가상 돔(Virtual DOM)을 사용하는 라이브러리의 등장 및 여러 프레임워크에서의 
	의존도가 하락하고 있는 추세
	
	웹 페이지는 브라우저에서 DOM이란 표준 형식으로 파싱되어 표현되는데,
	동적으로 변화하는 대화형 웹(Interactive Web)을 구현하기 위해 돔 조작은 필수
	대부분의 브라우저가 돔 조작 발생시 많은 연산으로 성능이 낮아지는 문제를 발생 시켰고
	그로 인해 개발자의 창의력을 저해시키는 요소로서 작용됨
	
	이슈 해결을 위해 react라는 라이브러리가 가상 돔을 채용하여 대중화 시킴
	(=> 메모리에 가상 DOM구성, 실제 DOM과 차이점 비교 후 변경된 부분을 실제에 적용하는 방식)
	가상 DOM 사용 방식은 성능도 뛰어나고 화려한 웹 페이지를 비교적 손쉽게 제작할 수 있어
	개발자들에게 크게 환영받으며 이후 등장한 프레임워크와 라이브러리도 가상 DOM을 적극 채용

	
*framework와 library
	개발에 있어 쉽고 빠른 생산성을 위해 사용

	[프레임워크] 뼈대나 기반구조
	프로그래밍 진행 시 필수적 코드, 알고리즘 등 어느정도의 구조를 제공해주는 형태
	스스로의 흐름을 가지고 있으며, 사용자가 코드를 연결할 공간을 강제한다.
	- Spring, Django, Lararvel, CodeIgniter, nodejs 등..
			
	[라이브러리] 특정 기능에 대한 도구 또는 함수들의 집합
	프로그램의 기능을 수행하기 위해 도움을 주며, 필요한 것을 제공하는 역할
	사용자가 직접 흐름을 제어하며 결정하도록 함
*/